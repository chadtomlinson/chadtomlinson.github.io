{"componentChunkName":"component---src-templates-blog-post-js","path":"/gatsby-28042021/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"f5a7432f-ea6d-5025-8ee5-e85363856c15","excerpt":"I learnt C at College and University, using it mostly to program microcontrollers, but recently I’ve been programming in JavaScript using Node.js. For…","html":"<p>I learnt C at College and University, using it mostly to program microcontrollers, but recently I’ve been programming in JavaScript using Node.js.</p>\n<p>For developing Node.js applications I use a minimal Ubuntu LTS VM with Node Version Manager to prevent permission issues.</p>\n<p>Developing inside a Hyper-V virtual machine keeps my computer clean, prevents code from accidentally breaking Windows, and enables the environment to be quickly replaced or restored.</p>\n<p>Ubuntu is the most popular Linux distrobution, the Long Term Support version with its longer support cycle offereing a more stable platform for development. This is why Ubuntu LTS generally has better software availability compared to other releases or distrobutions, making it a better platform for development.</p>\n<p>Normally Node.js installed using root permissions, typically a sudo user. Node.js development is normally done using user permissions. This can create issues with permissions when working with Node.js projects. Node Version Manager get around this by installing Node.js with user permissions, making it easier to develop applications. NVM is part of the recommended development environment for Gatsby JS, but it does help with other Node.js projects.</p>\n<p>Below is an abbrieviated Gatsby JS install procedure for Ubtunu LTS.</p>\n<p><sup>Source: <a href=\"https://www.gatsbyjs.com/docs/tutorial/part-zero/\">Set Up Your Development Environment</a></sup></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Update package lists and upgrade updated packages</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> -y upgrade</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install cURL to enable download and installation of NVM</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">curl</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Download and run the NVM install script</span>\n<span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install Node.js version 10 using NVM</span>\nnvm <span class=\"token function\">install</span> <span class=\"token number\">10</span></code></pre></div>\n<p>NVM can maintain multiple Node.js versions, so needs to be instructed which one to use before proceeding.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Specifiy NVM to use Node.js version 10 by default</span>\nnvm use <span class=\"token number\">10</span></code></pre></div>\n<p>Git is a Gatbsy JS dependency that is required so it can download and prepare Starter templates. It’s also required to maintain public and private repositories when developing applications.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install Git</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">git</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install Gatsby JS globally</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g gatsby-cli</code></pre></div>\n<p>Applications can be developed in Visual Studio Code using the Remote-SSH extension using a SSH key to avoid constantly having to type in your password, just remember not to enter a passphrase when generating the key in this case.</p>\n<p>Create and/or navigate to your users .ssh folder in Windows 10, and generate a rsa key pair:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Generate SSH Keys</span>\nssh<span class=\"token operator\">-</span>keygen</code></pre></div>\n<p>Enter the filename to save the key:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Enter file in which to save the key (C:\\Users\\User/.ssh/id_rsa): serf_rsa</code></pre></div>\n<p>Enter a passphrase to password protect the private key or leave it blank for local environments:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Enter passphrase (empty for no passphrase):</code></pre></div>\n<p>Verify the passphrase if required:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Enter same passphrase again:</code></pre></div>\n<p>The key pair will be generated with details as per below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Your identification has been saved in serf_rsa.\nYour public key has been saved in serf_rsa.pub.\nThe key fingerprint is:\nThe key&#39;s randomart image is:\n+---[RSA 2048]----+\n|           ox.   |\n|   . X .  o.o o  |\n|    x =. .   = o |\n|   . oo.  . . *.o|\n|    XxX.Xx X X +x|\n|   .X.x X = X    |\n|    =+0o.        |\n+----[SHA256]-----+</code></pre></div>\n<p>Copy the public key to the server:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">scp</span> C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span><span class=\"token variable\">$ENV</span>:USERNAME<span class=\"token punctuation\">\\</span>.ssh<span class=\"token punctuation\">\\</span>serf_rsa.pub user@192.168.1.201:~</code></pre></div>\n<p>In an SSH connection add the public key to the authorized keys:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> ~/.ssh/serf_rsa.pub <span class=\"token operator\">|</span> <span class=\"token function\">cat</span> <span class=\"token operator\">>></span> ~/.ssh/authorized_keys</code></pre></div>\n<p>Create or modify a <em>config</em> file in the <em>.ssh</em> folder in Windows 10:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Host 192.168.1.201\n  HostName 192.168.1.201\n  User odin\n  IdentityFile C:\\Users\\User\\.ssh\\serf_rsa</code></pre></div>\n<p>SSH via Windows Terminal can now be used to manage the VM via remote access.</p>\n<p>For copying files in and out of the VM wihtout setting up Samba, WinSCP can be used via SSH using the private key to prevent password prompts.</p>\n<p>Once setup the entire development environment VM can be backed up so if there is a catistrohpic issue it can bre restored rather than rebuilding it from scratch.</p>","frontmatter":{"title":"Gatsby Development Environment","date":"April 28, 2021","description":"Gatsby Development Environment"}},"previous":{"fields":{"slug":"/vm-21042021/"},"frontmatter":{"title":"Increasing storage on Ubtunu LTS Hyper-V VM"}},"next":{"fields":{"slug":"/migration-29042021/"},"frontmatter":{"title":"Migration to Gatsby"}}},"pageContext":{"id":"f5a7432f-ea6d-5025-8ee5-e85363856c15","previousPostId":"0f042b3e-9239-5ae4-b24d-e5f3e864b42f","nextPostId":"c6319488-9acb-5fd0-8023-ff1f1b9f94a3"}},"staticQueryHashes":["2841359383","3257411868"]}